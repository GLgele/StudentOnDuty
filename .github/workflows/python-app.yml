# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: PyInstaller-Nac
      id: pyinstaller
      uses: Nackophilz/pyinstaller-action@V1.0.1
      with:
        python_ver: '3.10'
        spec: 'StudentOnDuty.spec'
        requirements: 'requirements.txt'
        upload_exe_with_name: 'StudentOnDuty.exe'

    - name: Delete release
      uses: cb80/delrel@latest
      with:
        tag: 'newest-push'
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: newest-push
        release_name: Newest Push            
        draft: false
        prerelease: true
    
    #- name: Download the artifact
    #  uses: actions/download-artifact@v4
    #  with:
    #    name: StudentOnDuty.exe
    #    path: ./

    - name: rename
      run: |
        cd dist
        mv StudentOnDuty StudentOnDuty.exe

    - name: Upload release
      uses: actions/upload-release-asset@v1
      id: upload-release-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: StudentOnDuty.exe
        asset_content_type: application/vnd.microsoft.portable-executable